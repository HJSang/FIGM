{
    "collab_server" : "",
    "contents" : "// Generated by using Rcpp::compileAttributes() -> do not edit by hand\n// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393\n\n#include <RcppArmadillo.h>\n#include <Rcpp.h>\n\nusing namespace Rcpp;\nusing namespace arma;\n// mvrnormArma\narma::mat mvrnormArma(int n, arma::vec mu, arma::mat sigma);\nRcppExport SEXP _FIGM_mvrnormArma(SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< int >::type n(nSEXP);\n    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);\n    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);\n    rcpp_result_gen = Rcpp::wrap(mvrnormArma(n, mu, sigma));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// imputate\nmat imputate(vec Yi, vec mu, mat S, int m);\nRcppExport SEXP _FIGM_imputate(SEXP YiSEXP, SEXP muSEXP, SEXP SSEXP, SEXP mSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< vec >::type Yi(YiSEXP);\n    Rcpp::traits::input_parameter< vec >::type mu(muSEXP);\n    Rcpp::traits::input_parameter< mat >::type S(SSEXP);\n    Rcpp::traits::input_parameter< int >::type m(mSEXP);\n    rcpp_result_gen = Rcpp::wrap(imputate(Yi, mu, S, m));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// com_FI\nmat com_FI(mat Y, vec mu, mat S, int m);\nRcppExport SEXP _FIGM_com_FI(SEXP YSEXP, SEXP muSEXP, SEXP SSEXP, SEXP mSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< mat >::type Y(YSEXP);\n    Rcpp::traits::input_parameter< vec >::type mu(muSEXP);\n    Rcpp::traits::input_parameter< mat >::type S(SSEXP);\n    Rcpp::traits::input_parameter< int >::type m(mSEXP);\n    rcpp_result_gen = Rcpp::wrap(com_FI(Y, mu, S, m));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// FI_w\nvec FI_w(mat Imp, vec mu, mat S, vec mu0, mat S0);\nRcppExport SEXP _FIGM_FI_w(SEXP ImpSEXP, SEXP muSEXP, SEXP SSEXP, SEXP mu0SEXP, SEXP S0SEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< mat >::type Imp(ImpSEXP);\n    Rcpp::traits::input_parameter< vec >::type mu(muSEXP);\n    Rcpp::traits::input_parameter< mat >::type S(SSEXP);\n    Rcpp::traits::input_parameter< vec >::type mu0(mu0SEXP);\n    Rcpp::traits::input_parameter< mat >::type S0(S0SEXP);\n    rcpp_result_gen = Rcpp::wrap(FI_w(Imp, mu, S, mu0, S0));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// find_obs\nList find_obs(mat s);\nRcppExport SEXP _FIGM_find_obs(SEXP sSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< mat >::type s(sSEXP);\n    rcpp_result_gen = Rcpp::wrap(find_obs(s));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// Update_par\nvoid Update_par(mat& com, vec& mu, mat& S);\nRcppExport SEXP _FIGM_Update_par(SEXP comSEXP, SEXP muSEXP, SEXP SSEXP) {\nBEGIN_RCPP\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< mat& >::type com(comSEXP);\n    Rcpp::traits::input_parameter< vec& >::type mu(muSEXP);\n    Rcpp::traits::input_parameter< mat& >::type S(SSEXP);\n    Update_par(com, mu, S);\n    return R_NilValue;\nEND_RCPP\n}\n// sub_mat\nmat sub_mat(mat& com, vec& ID, int id);\nRcppExport SEXP _FIGM_sub_mat(SEXP comSEXP, SEXP IDSEXP, SEXP idSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< mat& >::type com(comSEXP);\n    Rcpp::traits::input_parameter< vec& >::type ID(IDSEXP);\n    Rcpp::traits::input_parameter< int >::type id(idSEXP);\n    rcpp_result_gen = Rcpp::wrap(sub_mat(com, ID, id));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// stat_est\nvec stat_est(mat& com, vec a);\nRcppExport SEXP _FIGM_stat_est(SEXP comSEXP, SEXP aSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< mat& >::type com(comSEXP);\n    Rcpp::traits::input_parameter< vec >::type a(aSEXP);\n    rcpp_result_gen = Rcpp::wrap(stat_est(com, a));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// FI\nvec FI(mat s, int iter, int m, vec a);\nRcppExport SEXP _FIGM_FI(SEXP sSEXP, SEXP iterSEXP, SEXP mSEXP, SEXP aSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< mat >::type s(sSEXP);\n    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);\n    Rcpp::traits::input_parameter< int >::type m(mSEXP);\n    Rcpp::traits::input_parameter< vec >::type a(aSEXP);\n    rcpp_result_gen = Rcpp::wrap(FI(s, iter, m, a));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// Imputate_K\nmat Imputate_K(vec Yi, List& mu, List& S, int m, int K);\nRcppExport SEXP _FIGM_Imputate_K(SEXP YiSEXP, SEXP muSEXP, SEXP SSEXP, SEXP mSEXP, SEXP KSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< vec >::type Yi(YiSEXP);\n    Rcpp::traits::input_parameter< List& >::type mu(muSEXP);\n    Rcpp::traits::input_parameter< List& >::type S(SSEXP);\n    Rcpp::traits::input_parameter< int >::type m(mSEXP);\n    Rcpp::traits::input_parameter< int >::type K(KSEXP);\n    rcpp_result_gen = Rcpp::wrap(Imputate_K(Yi, mu, S, m, K));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// com_FI_K\nmat com_FI_K(mat Y, List& mu, List& S, int m, int K);\nRcppExport SEXP _FIGM_com_FI_K(SEXP YSEXP, SEXP muSEXP, SEXP SSEXP, SEXP mSEXP, SEXP KSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< mat >::type Y(YSEXP);\n    Rcpp::traits::input_parameter< List& >::type mu(muSEXP);\n    Rcpp::traits::input_parameter< List& >::type S(SSEXP);\n    Rcpp::traits::input_parameter< int >::type m(mSEXP);\n    Rcpp::traits::input_parameter< int >::type K(KSEXP);\n    rcpp_result_gen = Rcpp::wrap(com_FI_K(Y, mu, S, m, K));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// FI_w_K\nvec FI_w_K(mat Imp, List& mu, List& S, List& mu0, List& S0, vec& PG);\nRcppExport SEXP _FIGM_FI_w_K(SEXP ImpSEXP, SEXP muSEXP, SEXP SSEXP, SEXP mu0SEXP, SEXP S0SEXP, SEXP PGSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< mat >::type Imp(ImpSEXP);\n    Rcpp::traits::input_parameter< List& >::type mu(muSEXP);\n    Rcpp::traits::input_parameter< List& >::type S(SSEXP);\n    Rcpp::traits::input_parameter< List& >::type mu0(mu0SEXP);\n    Rcpp::traits::input_parameter< List& >::type S0(S0SEXP);\n    Rcpp::traits::input_parameter< vec& >::type PG(PGSEXP);\n    rcpp_result_gen = Rcpp::wrap(FI_w_K(Imp, mu, S, mu0, S0, PG));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// BIC_cpp\ndouble BIC_cpp(mat& s, List& mu, List& S, vec& PG, int K);\nRcppExport SEXP _FIGM_BIC_cpp(SEXP sSEXP, SEXP muSEXP, SEXP SSEXP, SEXP PGSEXP, SEXP KSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< mat& >::type s(sSEXP);\n    Rcpp::traits::input_parameter< List& >::type mu(muSEXP);\n    Rcpp::traits::input_parameter< List& >::type S(SSEXP);\n    Rcpp::traits::input_parameter< vec& >::type PG(PGSEXP);\n    Rcpp::traits::input_parameter< int >::type K(KSEXP);\n    rcpp_result_gen = Rcpp::wrap(BIC_cpp(s, mu, S, PG, K));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// est_mean\nvec est_mean(vec PG, List mu);\nRcppExport SEXP _FIGM_est_mean(SEXP PGSEXP, SEXP muSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< vec >::type PG(PGSEXP);\n    Rcpp::traits::input_parameter< List >::type mu(muSEXP);\n    rcpp_result_gen = Rcpp::wrap(est_mean(PG, mu));\n    return rcpp_result_gen;\nEND_RCPP\n}\n// FIK\nvec FIK(mat s, int iter, int K, int m, List mu0, List S0, vec a);\nRcppExport SEXP _FIGM_FIK(SEXP sSEXP, SEXP iterSEXP, SEXP KSEXP, SEXP mSEXP, SEXP mu0SEXP, SEXP S0SEXP, SEXP aSEXP) {\nBEGIN_RCPP\n    Rcpp::RObject rcpp_result_gen;\n    Rcpp::RNGScope rcpp_rngScope_gen;\n    Rcpp::traits::input_parameter< mat >::type s(sSEXP);\n    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);\n    Rcpp::traits::input_parameter< int >::type K(KSEXP);\n    Rcpp::traits::input_parameter< int >::type m(mSEXP);\n    Rcpp::traits::input_parameter< List >::type mu0(mu0SEXP);\n    Rcpp::traits::input_parameter< List >::type S0(S0SEXP);\n    Rcpp::traits::input_parameter< vec >::type a(aSEXP);\n    rcpp_result_gen = Rcpp::wrap(FIK(s, iter, K, m, mu0, S0, a));\n    return rcpp_result_gen;\nEND_RCPP\n}\n\nRcppExport SEXP FIGM_BIC_cpp(SEXP, SEXP, SEXP, SEXP, SEXP);\nRcppExport SEXP FIGM_com_FI(SEXP, SEXP, SEXP, SEXP);\nRcppExport SEXP FIGM_com_FI_K(SEXP, SEXP, SEXP, SEXP, SEXP);\nRcppExport SEXP FIGM_FI(SEXP, SEXP, SEXP, SEXP);\nRcppExport SEXP FIGM_FI_w(SEXP, SEXP, SEXP, SEXP, SEXP);\nRcppExport SEXP FIGM_FI_w_K(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);\nRcppExport SEXP FIGM_FIK(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);\nRcppExport SEXP FIGM_find_obs(SEXP);\nRcppExport SEXP FIGM_imputate(SEXP, SEXP, SEXP, SEXP);\nRcppExport SEXP FIGM_Imputate_K(SEXP, SEXP, SEXP, SEXP, SEXP);\nRcppExport SEXP FIGM_mvrnormArma(SEXP, SEXP, SEXP);\nRcppExport SEXP FIGM_stat_est(SEXP, SEXP);\nRcppExport SEXP FIGM_sub_mat(SEXP, SEXP, SEXP);\nRcppExport SEXP FIGM_Update_par(SEXP, SEXP, SEXP);\n\nstatic const R_CallMethodDef CallEntries[] = {\n    {\"_FIGM_mvrnormArma\", (DL_FUNC) &_FIGM_mvrnormArma, 3},\n    {\"_FIGM_imputate\", (DL_FUNC) &_FIGM_imputate, 4},\n    {\"_FIGM_com_FI\", (DL_FUNC) &_FIGM_com_FI, 4},\n    {\"_FIGM_FI_w\", (DL_FUNC) &_FIGM_FI_w, 5},\n    {\"_FIGM_find_obs\", (DL_FUNC) &_FIGM_find_obs, 1},\n    {\"_FIGM_Update_par\", (DL_FUNC) &_FIGM_Update_par, 3},\n    {\"_FIGM_sub_mat\", (DL_FUNC) &_FIGM_sub_mat, 3},\n    {\"_FIGM_stat_est\", (DL_FUNC) &_FIGM_stat_est, 2},\n    {\"_FIGM_FI\", (DL_FUNC) &_FIGM_FI, 4},\n    {\"_FIGM_Imputate_K\", (DL_FUNC) &_FIGM_Imputate_K, 5},\n    {\"_FIGM_com_FI_K\", (DL_FUNC) &_FIGM_com_FI_K, 5},\n    {\"_FIGM_FI_w_K\", (DL_FUNC) &_FIGM_FI_w_K, 6},\n    {\"_FIGM_BIC_cpp\", (DL_FUNC) &_FIGM_BIC_cpp, 5},\n    {\"_FIGM_est_mean\", (DL_FUNC) &_FIGM_est_mean, 2},\n    {\"_FIGM_FIK\", (DL_FUNC) &_FIGM_FIK, 7},\n    {\"FIGM_BIC_cpp\",     (DL_FUNC) &FIGM_BIC_cpp,     5},\n    {\"FIGM_com_FI\",      (DL_FUNC) &FIGM_com_FI,      4},\n    {\"FIGM_com_FI_K\",    (DL_FUNC) &FIGM_com_FI_K,    5},\n    {\"FIGM_FI\",          (DL_FUNC) &FIGM_FI,          4},\n    {\"FIGM_FI_w\",        (DL_FUNC) &FIGM_FI_w,        5},\n    {\"FIGM_FI_w_K\",      (DL_FUNC) &FIGM_FI_w_K,      6},\n    {\"FIGM_FIK\",         (DL_FUNC) &FIGM_FIK,         7},\n    {\"FIGM_find_obs\",    (DL_FUNC) &FIGM_find_obs,    1},\n    {\"FIGM_imputate\",    (DL_FUNC) &FIGM_imputate,    4},\n    {\"FIGM_Imputate_K\",  (DL_FUNC) &FIGM_Imputate_K,  5},\n    {\"FIGM_mvrnormArma\", (DL_FUNC) &FIGM_mvrnormArma, 3},\n    {\"FIGM_stat_est\",    (DL_FUNC) &FIGM_stat_est,    2},\n    {\"FIGM_sub_mat\",     (DL_FUNC) &FIGM_sub_mat,     3},\n    {\"FIGM_Update_par\",  (DL_FUNC) &FIGM_Update_par,  3},\n    {NULL, NULL, 0}\n};\n\nRcppExport void R_init_FIGM(DllInfo *dll) {\n    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);\n    R_useDynamicSymbols(dll, FALSE);\n}\n",
    "created" : 1502902071393.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1262894584",
    "id" : "B7B65EF5",
    "lastKnownWriteTime" : 1502902086,
    "last_content_update" : 1502902086065,
    "path" : "~/Dropbox/KIM/FIGM/FIGM/src/RcppExports.cpp",
    "project_path" : "src/RcppExports.cpp",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "cpp"
}